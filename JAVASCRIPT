let currentSlide = 0;
let autoPlayInterval;
let progressInterval;
let isPlaying = true;
const slideInterval = 4000; // 4 seconds
const progressUpdateInterval = 50; // Update progress every 50ms

const slides = document.getElementById('slides');
const indicators = document.getElementById('indicators');
const playPauseBtn = document.getElementById('playPauseBtn');
const progressBar = document.getElementById('progress');

const totalSlides = slides.children.length;

// Initialize the slider when page loads
document.addEventListener('DOMContentLoaded', function() {
    createIndicators();
    startAutoPlay();
    startProgress();
});

// Initialize indicators
function createIndicators() {
    for (let i = 0; i < totalSlides; i++) {
        const indicator = document.createElement('div');
        indicator.className = 'indicator';
        indicator.onclick = () => goToSlide(i);
        indicators.appendChild(indicator);
    }
    updateIndicators();
}

// Update active indicator
function updateIndicators() {
    const allIndicators = indicators.children;
    for (let i = 0; i < allIndicators.length; i++) {
        allIndicators[i].classList.toggle('active', i === currentSlide);
    }
}

// Change slide function
function changeSlide(direction) {
    currentSlide += direction;
    
    if (currentSlide >= totalSlides) {
        currentSlide = 0;
    } else if (currentSlide < 0) {
        currentSlide = totalSlides - 1;
    }
    
    updateSlider();
}

// Go to specific slide
function goToSlide(slideIndex) {
    currentSlide = slideIndex;
    updateSlider();
}

// Update slider position and indicators
function updateSlider() {
    const translateX = -currentSlide * 100;
    slides.style.transform = `translateX(${translateX}%)`;
    updateIndicators();
    resetProgress();
}

// Toggle auto-play
function toggleAutoPlay() {
    isPlaying = !isPlaying;
    playPauseBtn.textContent = isPlaying ? 'Pause' : 'Play';
    
    if (isPlaying) {
        startAutoPlay();
        startProgress();
    } else {
        stopAutoPlay();
        stopProgress();
    }
}

// Start auto-play
function startAutoPlay() {
    autoPlayInterval = setInterval(() => {
        changeSlide(1);
    }, slideInterval);
}

// Stop auto-play
function stopAutoPlay() {
    clearInterval(autoPlayInterval);
}

// Start progress bar animation
function startProgress() {
    let progress = 0;
    const increment = (100 / slideInterval) * progressUpdateInterval;
    
    progressInterval = setInterval(() => {
        progress += increment;
        if (progress >= 100) {
            progress = 0;
        }
        progressBar.style.width = progress + '%';
    }, progressUpdateInterval);
}

// Stop progress bar animation
function stopProgress() {
    clearInterval(progressInterval);
}

// Reset progress bar
function resetProgress() {
    if (isPlaying) {
        stopProgress();
        progressBar.style.width = '0%';
        startProgress();
    }
}

// Handle keyboard navigation
document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
        changeSlide(-1);
    } else if (e.key === 'ArrowRight') {
        changeSlide(1);
    } else if (e.key === ' ') {
        e.preventDefault();
        toggleAutoPlay();
    }
});

// Pause on hover
slides.addEventListener('mouseenter', () => {
    if (isPlaying) {
        stopAutoPlay();
        stopProgress();
    }
});

slides.addEventListener('mouseleave', () => {
    if (isPlaying) {
        startAutoPlay();
        startProgress();
    }
});

// Touch/swipe support for mobile
let startX = 0;
let startY = 0;

slides.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
    startY = e.touches[0].clientY;
});

slides.addEventListener('touchend', (e) => {
    if (!startX || !startY) return;

    const endX = e.changedTouches[0].clientX;
    const endY = e.changedTouches[0].clientY;

    const diffX = startX - endX;
    const diffY = startY - endY;

    // Only handle horizontal swipes
    if (Math.abs(diffX) > Math.abs(diffY)) {
        if (Math.abs(diffX) > 50) { // Minimum swipe distance
            if (diffX > 0) {
                changeSlide(1); // Swipe left, next slide
            } else {
                changeSlide(-1); // Swipe right, previous slide
            }
        }
    }

    // Reset values
    startX = 0;
    startY = 0;
});

// Handle window resize
window.addEventListener('resize', () => {
    updateSlider();
});
